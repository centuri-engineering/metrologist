version: "3.6"

x-build-args: &build_args
  INSTALL_PYTHON_VERSION: 3.8
  INSTALL_NODE_VERSION: 14

x-default-volumes: &default_volumes
  volumes:
    - ./:/app
    - node-modules:/app/node_modules

services:
  metrologist_db:
    image: "postgres:11"
    restart: always
    env_file:
      - .env
    networks:
      - metrologist
    volumes:
      - "db_data:/var/lib/postgresql/data"
      - "backup:/backups"

  flask-dev:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    environment:
      DATA_PATH: "/data"
    image: "metrologist-development"
    depends_on:
      - metrologist_db
    networks:
      - metrologist
    volumes:
      - "db_data:/data"
    ports:
      - "5000:5000"
      - "2992:2992"
    <<: *default_volumes

  flask-prod:
    build:
      context: .
      target: production
      args:
        <<: *build_args
    image: "metrologist-production"
    depends_on:
      - metrologist_db
    networks:
      - metrologist
    ports:
      - "5000:5000"
    environment:
      DATA_PATH: "/data"
      FLASK_ENV: production
      FLASK_DEBUG: 0
      LOG_LEVEL: info
      GUNICORN_WORKERS: 4
    volumes:
      - "db_data:/data"
    <<: *default_volumes

  manage:
    build:
      context: .
      target: manage
      args:
        <<: *build_args
    entrypoint: flask
    depends_on:
      - metrologist_db
    networks:
      - metrologist
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
    image: "metrologist-manage"
    stdin_open: true
    tty: true
    <<: *default_volumes

volumes:
  node-modules:
  db_data:
    driver_opts:
      type: none
      device: $HOME/data/metrologist
      o: bind

  backup:
    driver_opts:
      type: none
      device: $HOME/data/backups/metrologist
      o: bind

networks:
  metrologist:
